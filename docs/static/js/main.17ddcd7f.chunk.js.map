{"version":3,"sources":["evidence.js","components/EvidenceIcon.js","components/EvidenceButton.js","components/Ghost.js","App.js","utils.js","serviceWorkerRegistration.js","index.js"],"names":["FreezingTemperatures","Fingerprints","SpiritBox","EMFLevel5","GhostWriting","GhostOrb","DOTSProjector","EvidenceIcon","evidence","className","EvidenceButton","currentEvidence","ruledOutEvidence","remainingEvidence","toggleEvidence","Button","variant","startIcon","includes","onClick","disabled","Ghost","ghost","alert","name","traits","map","it","join","identifyPossibleGhosts","getGhosts","filter","main","values","value","containsAll","containsNone","id","sort","a","b","localeCompare","App","useState","setCurrentEvidence","setRemainingEvidence","setRuledOutEvidence","ghosts","setGhosts","useEffect","items","Set","item","add","list","push","distinct","flatMap","getRemainingEvidence","IconButton","Clear","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.17ddcd7f.chunk.js","sourcesContent":["export const FreezingTemperatures = \"Freezing Temperatures\";\r\nexport const Fingerprints = \"Fingerprints\";\r\nexport const SpiritBox = \"Spirit Box\";\r\nexport const EMFLevel5 = \"EMF Level 5\";\r\nexport const GhostWriting = \"Ghost Writing\";\r\nexport const GhostOrb = \"Ghost Orb\";\r\nexport const DOTSProjector = \"D.O.T.S. Projector\";","import {\r\n  FreezingTemperatures,\r\n  Fingerprints,\r\n  SpiritBox,\r\n  EMFLevel5,\r\n  GhostWriting,\r\n  GhostOrb,\r\n  DOTSProjector,\r\n} from \"../evidence\";\r\nimport {\r\n  MdAcUnit,\r\n  MdBlurOn,\r\n  MdFingerprint,\r\n  MdMenuBook,\r\n  MdRadio,\r\n  MdSettingsRemote,\r\n  MdVideocam,\r\n} from \"react-icons/md\";\r\n\r\nconst EvidenceIcon = ({ evidence, className }) => {\r\n  switch (evidence) {\r\n    case EMFLevel5:\r\n      return (\r\n        <MdSettingsRemote\r\n          key={evidence}\r\n          className={`ghost-evidence ${className}`}\r\n        />\r\n      );\r\n    case SpiritBox:\r\n      return (\r\n        <MdRadio key={evidence} className={`ghost-evidence ${className}`} />\r\n      );\r\n    case GhostWriting:\r\n      return (\r\n        <MdMenuBook key={evidence} className={`ghost-evidence ${className}`} />\r\n      );\r\n    case FreezingTemperatures:\r\n      return (\r\n        <MdAcUnit key={evidence} className={`ghost-evidence ${className}`} />\r\n      );\r\n    case GhostOrb:\r\n      return (\r\n        <MdVideocam key={evidence} className={`ghost-evidence ${className}`} />\r\n      );\r\n    case Fingerprints:\r\n      return (\r\n        <MdFingerprint\r\n          key={evidence}\r\n          className={`ghost-evidence ${className}`}\r\n        />\r\n      );\r\n    case DOTSProjector:\r\n      return (\r\n        <MdBlurOn key={evidence} className={`ghost-evidence ${className}`} />\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default EvidenceIcon;\r\n","import { Button } from \"@material-ui/core\";\r\nimport EvidenceIcon from \"./EvidenceIcon\";\r\n\r\nconst EvidenceButton = ({\r\n  evidence,\r\n  currentEvidence,\r\n  ruledOutEvidence,\r\n  remainingEvidence,\r\n  toggleEvidence,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"outlined\"\r\n        startIcon={<EvidenceIcon evidence={evidence}/>}\r\n        className={`evidence-btn ${\r\n          currentEvidence.includes(evidence) && \"selected\"\r\n        } ${ruledOutEvidence.includes(evidence) && \"ruled-out\"}`}\r\n        onClick={toggleEvidence}\r\n        disabled={\r\n          !(\r\n            remainingEvidence.includes(evidence) ||\r\n            currentEvidence.includes(evidence) ||\r\n            ruledOutEvidence.includes(evidence)\r\n          )\r\n        }\r\n      >\r\n       {evidence}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EvidenceButton;\r\n","import \"./Ghost.css\";\r\nimport EvidenceIcon from \"./EvidenceIcon\";\r\n\r\nconst Ghost = ({ ghost, currentEvidence }) => {\r\n  return (\r\n    <div\r\n      className=\"ghost\"\r\n      onClick={() =>\r\n        alert(\r\n          ghost.name + \"\\n\\n\" + ghost.traits.map((it) => \"- \" + it).join(\"\\n\\n\")\r\n        )\r\n      }\r\n    >\r\n      <h4 className=\"ghost-name\">{ghost.name}</h4>\r\n      <div>\r\n        <small>\r\n          {ghost.evidence.map((evidence) => (\r\n            <EvidenceIcon\r\n              key={evidence}\r\n              evidence={evidence}\r\n              className={currentEvidence.includes(evidence) && \"found\"}\r\n            />\r\n          ))}\r\n        </small>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ghost;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport EvidenceButton from \"./components/EvidenceButton\";\nimport { IconButton } from \"@material-ui/core\";\nimport Ghost from \"./components/Ghost\";\nimport { containsAll, containsNone, removeAll, distinct } from \"./utils\";\nimport { Clear } from \"@material-ui/icons\";\nimport {\n  FreezingTemperatures,\n  Fingerprints,\n  SpiritBox,\n  EMFLevel5,\n  GhostWriting,\n  GhostOrb,\n  DOTSProjector,\n} from \"./evidence\";\n\nfunction App() {\n  const evidence = [\n    FreezingTemperatures,\n    Fingerprints,\n    SpiritBox,\n    EMFLevel5,\n    GhostWriting,\n    GhostOrb,\n    DOTSProjector,\n  ];\n\n  const [currentEvidence, setCurrentEvidence] = useState([]);\n  const [remainingEvidence, setRemainingEvidence] = useState(evidence);\n  const [ruledOutEvidence, setRuledOutEvidence] = useState([]);\n  const [ghosts, setGhosts] = useState(getGhosts());\n\n  useEffect(() => {\n    setGhosts(identifyPossibleGhosts(currentEvidence, ruledOutEvidence));\n    setRemainingEvidence(getRemainingEvidence(currentEvidence, ruledOutEvidence));\n  }, [currentEvidence, ruledOutEvidence]);\n\n  const reset = () => {\n    setCurrentEvidence([]);\n    setRemainingEvidence(evidence);\n    setRuledOutEvidence([]);\n    setGhosts(getGhosts());\n  };\n\n  const toggleEvidence = (evidence) => {\n    if (currentEvidence.includes(evidence)) {\n      setRuledOutEvidence([...ruledOutEvidence, evidence]);\n      setCurrentEvidence(currentEvidence.filter((it) => it !== evidence));\n    } else if (ruledOutEvidence.includes(evidence)) {\n      setRuledOutEvidence(ruledOutEvidence.filter((it) => it !== evidence));\n    } else {\n      setCurrentEvidence([...currentEvidence, evidence]);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Phasmofinder</h1>\n      <div id=\"entry\">\n        {evidence.map((evidence) => (\n          <EvidenceButton\n            key={evidence}\n            evidence={evidence}\n            currentEvidence={currentEvidence}\n            ruledOutEvidence={ruledOutEvidence}\n            remainingEvidence={remainingEvidence}\n            toggleEvidence={() => toggleEvidence(evidence)}\n          />\n        ))}\n        <IconButton onClick={reset} className=\"clear-btn\">\n          <Clear />\n        </IconButton>\n      </div>\n      <div className=\"ghost-section\">\n        {ghosts.map((ghost) => (\n          <Ghost\n            key={ghost.id}\n            ghost={ghost}\n            currentEvidence={currentEvidence}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction identifyPossibleGhosts(currentEvidence, ruledOutEvidence) {\n  return getGhosts().filter(\n    (it) =>\n      containsAll(it.evidence, currentEvidence) &&\n      containsNone(it.evidence, ruledOutEvidence)\n  );\n}\n\nfunction getRemainingEvidence(currentEvidence, ruledOutEvidence) {\n  const possibleGhosts = identifyPossibleGhosts(\n    currentEvidence,\n    ruledOutEvidence\n  );\n  return removeAll(distinct(possibleGhosts.flatMap((it) => it.evidence)), [\n    ...currentEvidence,\n    ...ruledOutEvidence,\n  ]);\n}\n\nfunction getGhosts() {\n  return [\n    {\n      id: 1,\n      name: \"Spirit\",\n      evidence: [EMFLevel5, SpiritBox, GhostWriting],\n      traits: [\"Can't hunt for 180 seconds after smudging (normally 90)\"],\n    },\n    {\n      id: 2,\n      name: \"Wraith\",\n      evidence: [EMFLevel5, SpiritBox, DOTSProjector],\n      traits: [\n        \"Can teleport near a player while not hunting\",\n        \"Can't leave footprints\",\n        \"Increased ghost activity when stepping in salt\",\n      ],\n    },\n    {\n      id: 3,\n      name: \"Phantom\",\n      evidence: [SpiritBox, Fingerprints, DOTSProjector],\n      traits: [\n        \"Taking a photo makes it disappear\",\n        \"Sanity drops quickly while looking at the ghost\",\n        \"Stays invisible longer during the hunt (only visible every 1 to 2 seconds)\",\n      ],\n    },\n    {\n      id: 4,\n      name: \"Poltergeist\",\n      evidence: [SpiritBox, Fingerprints, GhostWriting],\n      traits: [\n        \"Can throw multiple items at once\",\n        \"Sanity decreases faster when multiple items are thrown\",\n      ],\n    },\n    {\n      id: 5,\n      name: \"Banshee\",\n      evidence: [Fingerprints, GhostOrb, DOTSProjector],\n      traits: [\n        \"It will target a single player during hunts (ignores others)\",\n        \"Navigates to target and will hunt if it sees it's target for long enough\",\n        \"Crucifixes have a wider effective radius\",\n      ],\n    },\n    {\n      id: 6,\n      name: \"Jinn\",\n      evidence: [EMFLevel5, Fingerprints, FreezingTemperatures],\n      traits: [\n        \"Runs faster while further from a player\",\n        \"Can lower all players sanity by 25%\",\n        \"Can't use abilities if the power is off\",\n      ],\n    },\n    {\n      id: 7,\n      name: \"Mare\",\n      evidence: [SpiritBox, GhostOrb, GhostWriting],\n      traits: [\n        \"Increased hunt chance if in a dark room\",\n        \"Can't turn on lights\",\n      ],\n    },\n    {\n      id: 8,\n      name: \"Revenant\",\n      evidence: [GhostOrb, GhostWriting, FreezingTemperatures],\n      traits: [\n        \"Runs faster if it can see a player\",\n        \"Runs slower if it can't see a player\",\n      ],\n    },\n    {\n      id: 9,\n      name: \"Shade\",\n      evidence: [EMFLevel5, GhostWriting, FreezingTemperatures],\n      traits: [\n        \"Less active when multiple players are in the room\",\n        \"More likely to hunt when players are alone\",\n      ],\n    },\n    {\n      id: 10,\n      name: \"Demon\",\n      evidence: [Fingerprints, GhostWriting, FreezingTemperatures],\n      traits: [\n        \"Can hunt when sanity is high\",\n        \"Successful ouija board answers take 40% sanity instead of 50%\",\n      ],\n    },\n    {\n      id: 11,\n      name: \"Yurei\",\n      evidence: [GhostOrb, FreezingTemperatures, DOTSProjector],\n      traits: [\n        \"Sanity drops faster during ghost events or when near the ghost in a hunt\",\n        \"Roams less when smudge sticks are used\",\n      ],\n    },\n    {\n      id: 12,\n      name: \"Oni\",\n      evidence: [EMFLevel5, FreezingTemperatures, DOTSProjector],\n      traits: [\n        \"More active when multiple players are in the room\",\n        \"Can throw objects further\",\n      ],\n    },\n    {\n      id: 13,\n      name: \"Hantu\",\n      evidence: [Fingerprints, GhostOrb, FreezingTemperatures],\n      traits: [\"Moves faster in cold rooms during hunts\"],\n    },\n    {\n      id: 14,\n      name: \"Yokai\",\n      evidence: [SpiritBox, GhostOrb, DOTSProjector],\n      traits: [\n        \"Can hunt when sanity is high if players are talking\",\n        \"Can only hear close voices during hunts\",\n      ],\n    },\n    {\n      id: 15,\n      name: \"Goryo\",\n      evidence: [EMFLevel5, Fingerprints, DOTSProjector],\n      traits: [\n        \"D.O.T.S only shows through video cameras\",\n        \"Does not roam much\",\n      ],\n    },\n    {\n      id: 16,\n      name: \"Myling\",\n      evidence: [EMFLevel5, Fingerprints, GhostWriting],\n      traits: [\n        \"Can be detected by the parabolic mic more than other ghosts\",\n        \"Footsteps can only be heard up close during a hunt (equal to flashlight flicker distance)\",\n      ],\n    },\n    {\n      id: 17,\n      name: \"Onryo\",\n      evidence: [SpiritBox, GhostOrb, FreezingTemperatures],\n      traits: [\n        \"Increased hunt chance when a flame is extinguished\",\n        \"Increased hunt change after each player death\",\n      ],\n    },\n    {\n      id: 18,\n      name: \"The Twins\",\n      evidence: [EMFLevel5, SpiritBox, FreezingTemperatures],\n      traits: [\n        \"Interactions around the map and in a specific room\",\n        \"Multiple interactions at the same time\",\n      ],\n    },\n    {\n      id: 19,\n      name: \"Raiju\",\n      evidence: [EMFLevel5, GhostOrb, DOTSProjector],\n      traits: [\n        \"Runs faster when near electronics\",\n        \"Can hunt early when near active electronics\",\n      ],\n    },\n    {\n      id: 20,\n      name: \"Obake\",\n      evidence: [EMFLevel5, Fingerprints, GhostOrb],\n      traits: [\"Can have a 6 finger fingerprint\"],\n    },\n    {\n      id: 21,\n      name: \"Mimic\",\n      evidence: [SpiritBox, Fingerprints, FreezingTemperatures, GhostOrb],\n      traits: [\"It can copy the traits of other ghosts\", \"Ghost orbs accompany the ghost (does not count as evidence)\"]\n    }\n  ].sort((a, b) => a.name.localeCompare(b.name));\n}\n\nexport default App;\n","export function containsAll(main, values) {\r\n    for (const value of values) {\r\n      if (!main.includes(value)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  export function containsNone(main, values) {\r\n    for (const value of values) {\r\n      if (main.includes(value)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  export function distinct(items) {\r\n    const values = new Set()\r\n    for (const item of items) {\r\n      values.add(item);\r\n    }\r\n\r\n    const list = [];\r\n\r\n    for (const item of values){\r\n      list.push(item);\r\n    }\r\n\r\n    return list;\r\n  }\r\n\r\n  export function removeAll(main, items) {\r\n    return main.filter((it) => !items.includes(it));\r\n  }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}